<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
        
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesMode">
            <util:constant static-field="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        </property>
    </bean>
    
    <aop:aspectj-autoproxy />

    <!-- models are lazy because we need Jena static data type registration to happen first -->
    <bean id="bareModel" class="au.com.miskinhill.rdf.ModelFactory" factory-method="load" lazy-init="true">
        <constructor-arg value="${au.com.miskinhill.contentPath}/meta.xml" />
    </bean>
    <bean id="inferredModel" class="au.com.miskinhill.rdf.ModelFactory" factory-method="load" lazy-init="true">
        <constructor-arg value="${au.com.miskinhill.contentPath}/meta-inferred.xml" />
    </bean>
    <bean id="model" class="au.com.miskinhill.rdf.ModelFactory" factory-method="createUnion" lazy-init="true">
        <constructor-arg ref="bareModel" />
        <constructor-arg ref="inferredModel" />
    </bean>
    <bean id="modelTimestamp" class="au.com.miskinhill.web.util.FileModificationTimeFactory" factory-method="getModificationTimeForPath">
        <constructor-arg value="${au.com.miskinhill.contentPath}/meta-inferred.xml" />
    </bean>
    <bean id="fulltextFetcher" class="au.com.miskinhill.domain.fulltext.FileFulltextFetcher">
        <constructor-arg value="${au.com.miskinhill.contentPath}" />
    </bean>
    <bean id="pdfFulltextBase" class="java.lang.String">
        <constructor-arg value="${au.com.miskinhill.contentPath}" />
    </bean>
        
    <bean class="javax.xml.stream.XMLEventFactory" factory-method="newInstance" />
    <bean class="javax.xml.stream.XMLInputFactory" factory-method="newInstance">
        <property name="XMLResolver">
            <bean class="au.com.miskinhill.xhtmldtd.XhtmlEntityResolver" />
        </property>
    </bean>
    <bean class="javax.xml.stream.XMLOutputFactory" factory-method="newInstance" />

    <context:component-scan base-package="au.id.djc.rdftemplate.datatype" />
    <context:component-scan base-package="au.com.miskinhill.rdf" />
    <context:component-scan base-package="au.com.miskinhill.web" />
    
    <bean id="selectorFactory" class="au.id.djc.rdftemplate.selector.EternallyCachingSelectorFactory">
        <constructor-arg>
            <bean class="au.id.djc.rdftemplate.selector.AntlrSelectorFactory">
                <property name="adaptationFactory" ref="adaptationFactory" />
                <property name="namespacePrefixMap">
                    <bean class="au.com.miskinhill.rdf.vocabulary.NamespacePrefixMapper" factory-method="getInstance" />
                </property>
            </bean>
        </constructor-arg>
    </bean>
    <bean class="au.id.djc.rdftemplate.TemplateInterpolator">
        <constructor-arg ref="selectorFactory" />
    </bean>

    <bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail" />
    </bean>
    <bean id="feedbackSubmissionTemplate" class="org.springframework.mail.SimpleMailMessage">
        <property name="subject" value="Feedback form submitted on miskinhill.com.au" />
        <property name="from" value="Miskin Hill &lt;tomcat@miskinhill.com.au&gt;" />
        <property name="to" value="info@miskinhill.com.au" />
    </bean>
    
    <bean id="unapiMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="au.com.miskinhill.schema.unapi" />
    </bean>
    <bean id="sitemapsMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="au.com.miskinhill.schema.sitemaps" />
    </bean>
    <bean id="oaipmhMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="au.com.miskinhill.schema.oaipmh" />
        <property name="marshallerProperties">
            <util:map>
                <entry key="com.sun.xml.bind.namespacePrefixMapper">
                    <bean class="au.com.miskinhill.schema.oaipmh.OAINamespacePrefixMapper" />
                </entry>
                <entry key="jaxb.schemaLocation" value="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd" />
            </util:map>
        </property>
    </bean>
    
</beans>