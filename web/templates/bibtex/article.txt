{% python
import re
from viewutils import name_or_literal, striptags

article = node
authors = article.getall('dc:creator')
issue = article['dc:isPartOf']
journal = issue['mhs:isIssueOf']

if authors:
    id = re.sub(r'\W', '', authors[0]['foaf:surname']) + issue.getone('dc:coverage', default='')[-4:]
else:
    id = re.sub(r'\W', '', article['dc:title'][:32]) + issue.getone('dc:coverage', default='')[-4:]
%}\
@article{${id}, 
    journal = "${journal['dc:title']}", 
{% if journal.identifier('urn:issn:') %}\
    issn = "${journal.identifier('urn:issn:')}", 
{% end %}\
{% if 'dc:publisher' in journal %}\
    publisher = "${name_or_literal(journal['dc:publisher'])}", 
{% end %}\
{% if 'mhs:volume' in issue %}\
    volume = "${issue['mhs:volume']}", 
{% end %}\
{% if 'mhs:issueNumber' in issue %}\
    number = "${issue['mhs:issueNumber']}", 
{% end %}\
{% if 'dc:coverage' in issue %}\
    year = "${issue['dc:coverage'][-4:]}", 
{% end %}\
    author = "${' and '.join(a['foaf:name'] for a in authors)}", 
    title = "${re.sub(r'(.)([A-Z]+)', r'\1{\2}', striptags(article['dc:title']))}", 
{% if 'mhs:startPage' in article and 'mhs:endPage' in article %}\
    pages = "${article['mhs:startPage']}â€“${article['mhs:endPage']}", 
{% end %}\
{% if unicode(article.uri).startswith('http://miskinhill.com.au/journals/') %}\
    url = "${article.uri}"
{% end %}\
{% if not unicode(article.uri).startswith('http://miskinhill.com.au/journals/') and 'mhs:availableFrom' in article %}\
    url = "${article.getone('mhs:availableFrom', as_uriref=True).uri}"
{% end %}\
}
